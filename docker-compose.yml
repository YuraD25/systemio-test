services:
    sio_test:
        user: app
        build:
            context: .
            args:
                USER_ID: ${USER_ID:-1000}
        ports:
            - "8337:8337"
        volumes:
            - .:/app:rw
        environment:
            - APP_ENV=dev
            - INSTALL_XDEBUG=${INSTALL_XDEBUG}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        depends_on:
            - postgres

    postgres:
        image: postgres:${POSTGRES_VERSION:-16}-alpine
        container_name: postgres
        restart: always
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - ${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}
        volumes:
            - db_data:/var/lib/postgresql/data:rw
          # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
          # - ./docker/db/data:/var/lib/postgresql/data:rw

volumes:
###> doctrine/doctrine-bundle ###
  db_data:
###< doctrine/doctrine-bundle ###
